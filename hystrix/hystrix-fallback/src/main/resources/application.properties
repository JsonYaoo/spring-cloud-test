spring.application.name=hystrix-consumer

server.port=50000

# 允许Bean同名覆盖: 不配置会报"feign-client.FeignClientSpecification"错误, 因为Feign的代理对象名称是使用里面的服务属性拼凑的, 所以可以配置允许Bean同名覆盖
spring.main.allow-bean-definition-overriding=true

eureka.client.serviceUrl.defaultZone=http://localhost:20000/eureka/

# 设置Ribbon的超时与重试策略, 经测试Ribbon配置可与Hystrix有冲突: 即Ribbon与Hystrix会共同作用, 即超时降级又超时重试, 这样就乱套了(建议Ribbon设置大点的超时参数)
# Ribbon指定服务的超时策略: 请求服务的连接超时时间: Http连接所花费的时间(ms)
feign-client.ribbon.ConnectTimeout=1000
# Ribbon指定服务的超时策略: 服务的业务处理超时时间(ms) => 这里设置Ribbon的超时比Hystrix的大, 防止Ribbon妨碍Hystrix的超时测试
feign-client.ribbon.ReadTimeout=8000

# Ribbon指定服务的重试策略: 允许在所有Http Method都进行重试策略(Get/Post/Put/Delete...)
feign-client.ribbon.OkToRetryOnAllOperations=false
# Ribbon指定服务的重试策略: 每台机器最大的服务超时重试次数 => 因此, 每台机器的请求次数 = 1 + 2 = 3次
feign-client.ribbon.MaxAutoRetries=0
# Ribbon指定服务的重试策略: 服务重试超时时, 还可以再重试几台机器 => 因此, 一共可以请求机器数 = 1 + 2 = 3台, 如果只有1台机器, 那么会继续请求该台机器
feign-client.ribbon.MaxAutoRetriesNextServer=0
# 因此, 一次服务请求的最大超时次数 = (1000 + 1000) * (1 + 2) * (1 + 2) = 18000ms = 18s

# 开启Feign下面的Hystrix功能(默认为false)
feign.hystrix.enabled=true
# 是否开启Hystrix服务降级功能(默认为true)
hystrix.command.default.fallback.enabled=true

# Hystrix超时策略: 全局超时开关配置
hystrix.command.default.execution.timeout.enabled=true
# Hystrix超时策略: 设置超时时间 => 经测试, 如果Ribbon不配置超时时间, 则会使用默认的超时时间1s, 使得Hystrix超时配置不生效
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000
# Hystrix超时策略: 超时以后终止线程 => 在Hystrix配置的2s超时后, 并不会触发终止线程!!!
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
# Hystrix超时策略: 取消线程后终止线程 => 在Hystrix配置的2s超时后, 并不会触发终止线程!!!
hystrix.command.default.execution.isolation.thread.interruptOnCancel=true
# 1. Hystrix超时策略: 指定服务中某个方法的超时配置(优先级比全局的高)
hystrix.command.IHystrixFallbackService#timeout(int).execution.isolation.thread.timeoutInMilliseconds=3000
# 2. Hystrix超时策略: 指定服务中某个方法的超时配置(优先级比全局的高) -> HystrixCommand
hystrix.command.requestCache.execution.isolation.thread.timeoutInMilliseconds=3000

# Hystrix RequestCache策略: 打开RequestCache(默认为true)
hystrix.command.default.requestCache.enabled=true